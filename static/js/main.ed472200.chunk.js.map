{"version":3,"sources":["components/Tasks.js","components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Tasks","props","readOnlyHandle","state","readOnly","setState","buttonName","task","inputRef","current","value","deleteComponent","show","onFocus","e","target","style","textDecoration","blur","createRef","render","this","onSubmit","preventDefault","id","display","placeholder","ref","onClick","Component","Add","appendChildren","myRef","children","type","map","child","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mSAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,eAAiB,YACa,IAAxB,EAAKC,MAAMC,SACb,EAAKC,SAAS,CAAED,UAAU,EAAOE,WAAY,UAE7C,EAAKD,SAAS,CAAED,UAAU,EAAME,WAAY,SAC5C,EAAKD,SAAS,CAAEE,KAAM,EAAKC,SAASC,QAAQC,UArB7B,EA0BnBC,gBAAkB,WAChB,EAAKN,SAAS,CAAEO,MAAM,KA3BL,EA+BnBC,QAAU,SAAAC,GACsB,SAA1B,EAAKX,MAAMG,aACyB,iBAAlCQ,EAAEC,OAAOC,MAAMC,eACjBH,EAAEC,OAAOC,MAAMC,eAAiB,eAEhCH,EAAEC,OAAOC,MAAMC,eAAiB,QAGpCH,EAAEC,OAAOG,QAnCT,EAAKV,SAAWW,sBAEhB,EAAKhB,MAAQ,CACXI,KAAMN,EAAMM,KACZH,UAAU,EACVE,WAAY,OACZc,QAAQ,EACRR,MAAM,GAXS,E,0CA0CnB,WACE,OACES,KAAKlB,MAAMS,MACT,8BACE,sBAAMU,SAAU,SAAAR,GAAC,OAAIA,EAAES,kBAAkBC,GAAG,WAA5C,SACE,qBAAIR,MAAO,CAAES,QAAS,UAAtB,UACE,uBACErB,SAAUiB,KAAKlB,MAAMC,SACrBsB,YAAaL,KAAKlB,MAAMI,KACxBM,QAASQ,KAAKR,QACdc,IAAKN,KAAKb,SACVgB,GAAG,aAEL,wBAAQI,QAASP,KAAKnB,eAAtB,SACGmB,KAAKlB,MAAMG,aAEd,wBAAQsB,QAASP,KAAKV,gBAAtB,0B,GA3DqBkB,aCCdC,E,kDACnB,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAaR8B,eAAiB,WAEkB,KAA7B,EAAKC,MAAMvB,QAAQC,QACrB,EAAKL,SAAS,CACZ4B,SAAS,GAAD,mBACH,EAAK9B,MAAM8B,UADR,CAEN,cAAC,EAAD,CAEET,GAAI,EAAKrB,MAAMqB,GACfjB,KAAM,EAAKyB,MAAMvB,QAAQC,OAFpB,EAAKP,MAAMqB,MAKpBA,GAAI,EAAKrB,MAAMqB,GAAK,EACpBjB,KAAM,KAER,EAAKyB,MAAMvB,QAAQC,MAAQ,KAzB7B,EAAKsB,MAAQb,sBAGb,EAAKhB,MAAQ,CACXqB,GAAI,EACJS,SAAU,IATK,E,0CAiCnB,WACE,OACE,gCACE,uBAAMX,SAAU,SAAAR,GAAC,OAAIA,EAAES,kBAAkBC,GAAG,UAA5C,UACE,qBAAKA,GAAG,UAAR,mBACA,sBAAKA,GAAG,QAAR,UACE,uBACEU,KAAK,OACLR,YAAY,aACZC,IAAKN,KAAKW,MACVR,GAAG,aAEL,wBAAQI,QAASP,KAAKU,eAAtB,uBAGJ,oBAAIP,GAAG,OAAP,SAAeH,KAAKlB,MAAM8B,SAASE,KAAI,SAAAC,GAAK,OAAIA,OAChD,qBAAKZ,GAAG,SAAR,6C,GAlDyBK,aCQlBQ,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed472200.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\r\nimport './Tasks.css';\r\n\r\nexport default class Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Referencing to the current task\r\n    this.inputRef = createRef();\r\n\r\n    this.state = {\r\n      task: props.task,\r\n      readOnly: true,\r\n      buttonName: 'Edit',\r\n      render: true,\r\n      show: true\r\n    };\r\n  }\r\n\r\n  // Helps to edit the tasks\r\n  readOnlyHandle = () => {\r\n    if (this.state.readOnly === true) {\r\n      this.setState({ readOnly: false, buttonName: 'Done' });\r\n    } else {\r\n      this.setState({ readOnly: true, buttonName: 'Edit' });\r\n      this.setState({ task: this.inputRef.current.value });\r\n    }\r\n  };\r\n\r\n  // Delete the tasks\r\n  deleteComponent = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  // Method to cut the text of the tasks that are done\r\n  onFocus = e => {\r\n    if (this.state.buttonName === 'Edit') {\r\n      if (e.target.style.textDecoration !== 'line-through') {\r\n        e.target.style.textDecoration = 'line-through';\r\n      } else {\r\n        e.target.style.textDecoration = 'none';\r\n      }\r\n    }\r\n    e.target.blur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      this.state.show && (\r\n        <div>\r\n          <form onSubmit={e => e.preventDefault()} id=\"taskForm\">\r\n            <li style={{ display: 'inline' }}>\r\n              <input\r\n                readOnly={this.state.readOnly}\r\n                placeholder={this.state.task}\r\n                onFocus={this.onFocus}\r\n                ref={this.inputRef}\r\n                id=\"taskList\"\r\n              ></input>\r\n              <button onClick={this.readOnlyHandle}>\r\n                {this.state.buttonName}\r\n              </button>\r\n              <button onClick={this.deleteComponent}>X</button>\r\n            </li>\r\n          </form>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport './Add.css';\r\nimport Tasks from './Tasks';\r\n\r\nexport default class Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Referencing to the input where we are entering the tasks\r\n    this.myRef = createRef();\r\n\r\n    // State of the App\r\n    this.state = {\r\n      id: 0,\r\n      children: []\r\n    };\r\n  }\r\n\r\n  // When Add Button is clicked, this will run\r\n  appendChildren = () => {\r\n    // Only add a new task when the input is not empty\r\n    if (this.myRef.current.value !== '') {\r\n      this.setState({\r\n        children: [\r\n          ...this.state.children,\r\n          <Tasks\r\n            key={this.state.id}\r\n            id={this.state.id}\r\n            task={this.myRef.current.value}\r\n          ></Tasks>\r\n        ],\r\n        id: this.state.id + 1,\r\n        task: ''\r\n      });\r\n      this.myRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={e => e.preventDefault()} id=\"addForm\">\r\n          <div id=\"heading\">FOCUS</div>\r\n          <div id=\"tasks\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Task\"\r\n              ref={this.myRef}\r\n              id=\"addField\"\r\n            ></input>\r\n            <button onClick={this.appendChildren}>Add</button>\r\n          </div>\r\n        </form>\r\n        <ul id=\"list\">{this.state.children.map(child => child)}</ul>\r\n        <div id=\"footer\">Created by Deepbaran Kar</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Add from './components/Add';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Add></Add>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}